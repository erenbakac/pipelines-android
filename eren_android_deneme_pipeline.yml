# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

parameters:

  - name: triggerWords
    type: object  
    default:
    - WillCreate
    - CreateApk
    - pipeline3
    

  - name: buildVariants
    type: object
    default:
    - Prod
    - Mock 

trigger:
- "*"

pool:
  vmImage: 'macOS-10.15'

stages:

- stage: Check_Commit_Message
  condition: ${{ containsValue(parameters.triggerWords, variables['Build.SourceVersionMessage']) }}
  jobs:
  - job: Job1
    steps:
      - script: echo Commit is valid!



- stage: BuildApp    
  dependsOn: Check_Commit_Message
  jobs:
  - job: Job2
    steps:
      - script: echo Start building!
      - ${{ each project in parameters.buildVariants }}: 
        - script: echo Started for 'assemble${{ project }}'
        - task: Gradle@2
          inputs:
            workingDirectory: ''
            gradleWrapperFile: 'gradlew'
            gradleOptions: '-Xmx3072m'
            publishJUnitResults: false
            testResultsFiles: '**/TEST-*.xml'
            tasks: 'assemble${{ project }}' 
        - task: AndroidSigning@3
          inputs:
            apkFiles: '**/*.apk'
            apksign: true
            apksignerKeystoreFile: 'Tutorial.jks'
            apksignerKeystorePassword: 'Eren1234.'
            apksignerKeystoreAlias: 'key0'
            apksignerKeyPassword: 'Eren1234.'
            apksignerArguments: --out $(Build.SourcesDirectory)/app/build/outputs/apk/release/${{ project }}.apk
            zipalign: true
        - task: CopyFiles@2
          displayName: 'Copy Files'
          inputs:
            SourceFolder: $(Build.SourcesDirectory)
            contents: '**/*.apk'
            targetFolder: '$(build.artifactStagingDirectory)/${{ project }}'
        - task: PublishBuildArtifacts@1
          continueOnError: false
          displayName: "Publish to azure"
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/${{ project }}' 
            ArtifactName:   'debug${{ project }}'   


